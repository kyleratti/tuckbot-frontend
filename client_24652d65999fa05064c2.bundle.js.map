{"version":3,"sources":["webpack:///./src/components/PageContainer.tsx","webpack:///./src/components/Links/RandomVideoLink.tsx","webpack:///./src/components/Loading.tsx","webpack:///./src/services/video/hooks.ts","webpack:///./src/App.tsx","webpack:///./src/css/app.scss?bd0e","webpack:///./src/css/app.scss","webpack:///./src/Main.tsx","webpack:///./src/Routes.tsx","webpack:///./src/pages/ContactPage/index.ts","webpack:///./src/pages/ContactPage/ContactPage.tsx","webpack:///./src/components/Footing.tsx","webpack:///./src/components/Links/ContactLink.tsx","webpack:///./src/components/Heading.tsx","webpack:///./src/pages/HomePage/index.ts","webpack:///./src/pages/HomePage/HomePage.tsx","webpack:///./src/pages/TuckerPage/index.ts","webpack:///./src/pages/TuckerPage/TuckerPage.tsx","webpack:///./src/pages/TuckerPage/components/TuckerGallery.tsx","webpack:///./src/pages/WatchPage/WatchPage.tsx","webpack:///./src/pages/WatchRandomPage/index.ts","webpack:///./src/pages/WatchRandomPage/WatchRandomPage.tsx","webpack:///./src/services/video/api.ts","webpack:///./src/pages/WatchVideoPage/index.ts","webpack:///./src/pages/WatchVideoPage/WatchVideoPage.tsx","webpack:///./src/components/VideoDisplay/index.ts","webpack:///./src/components/VideoDisplay/VideoDisplay.tsx","webpack:///./src/services/title/hooks.ts","webpack:///./src/components/VideoDisplay/components/VideoDetails.tsx","webpack:///./src/components/Links/RedditPostLink.tsx","webpack:///./src/components/VideoDisplay/components/VideoPlayer.tsx","webpack:///./src/img/poster.png","webpack:///./src/components/VideoDisplay/components/VideoTitle.tsx"],"names":["children","className","Link","to","redditPostId","isLoading","setIsLoading","React","useState","errorMessage","setErrorMessage","videoResponse","setVideoData","useEffect","res","fetchVideo","e","message","loadData","render","document","getElementById","content","module","i","options","locals","exports","push","Switch","Route","path","exact","component","Redirect","href","TUCKER_PETS","Heading","Component","props","super","state","numClicks","this","handleClick","bind","setState","redirect","id","onClick","TUCKER_BIRTHDAY_DIFF","Math","floor","Date","now","TUCKER_AGE","TuckerPage","useRedditVideo","history","useHistory","setTimeout","replace","API_ROOT","fetch","method","status","json","statusText","Error","result","data","redditPostTitle","mirrorUrl","match","params","Fragment","title","setTitle","poster","controls","src","controlsList"],"mappings":"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","file":"client_24652d65999fa05064c2.bundle.js","sourcesContent":["import * as React from \"react\";\r\nimport Footing from \"./Footing\";\r\nimport Heading from \"./Heading\";\r\n\r\nconst PageContainer: React.FunctionComponent = ({ children }) => (\r\n  <div className=\"wrapper\">\r\n    <Heading />\r\n\r\n    <div className=\"page-container\">\r\n      <div className=\"content\">{children}</div>\r\n    </div>\r\n\r\n    <Footing />\r\n  </div>\r\n);\r\n\r\nexport default PageContainer;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RandomVideoLink: React.FunctionComponent = () => (\r\n  <Link to=\"/watch/random\">watch a random video</Link>\r\n);\r\n\r\nexport default RandomVideoLink;\r\n","import * as React from \"react\";\r\n\r\nconst Loading: React.FunctionComponent = ({ children }) => (\r\n  <div>\r\n    <div className=\"loader\"></div>\r\n\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import * as React from \"react\";\r\n\r\nimport { VideoResponse, fetchVideo } from \"./api\";\r\n\r\nexport interface RedditVideoHookData {\r\n  isLoading: boolean;\r\n  errorMessage: string | null;\r\n  videoResponse: VideoResponse | null;\r\n}\r\n\r\nexport function useRedditVideo(redditPostId: string): RedditVideoHookData {\r\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n  const [errorMessage, setErrorMessage] = React.useState<string | null>(null);\r\n  const [videoResponse, setVideoData] = React.useState<VideoResponse | null>(\r\n    null\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const loadData = async () => {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const res = await fetchVideo(redditPostId);\r\n        setVideoData(res);\r\n        setErrorMessage(null);\r\n      } catch (e) {\r\n        setVideoData(null);\r\n        setErrorMessage(e.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [redditPostId]);\r\n\r\n  return {\r\n    isLoading,\r\n    errorMessage,\r\n    videoResponse\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport \"./css/app.scss\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nrender(<Main />, document.getElementById(\"main\"));\r\n","var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./app.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"html{height:100%}body{height:100%;margin:0;background-repeat:no-repeat;background-attachment:fixed;background:#767676;background:linear-gradient(0deg, #414141 0%, #2b2b2b 15%);font-family:\\\"Arial\\\",Arial,Helvetica,sans-serif;color:#afb0b2;place-items:center}a,a:visited{color:#3d70ab;font-weight:bold;text-decoration:none}a:hover{color:#d65656}.videoTitle h2{color:#d65656}.inline-list{list-style-type:none;padding:0}.inline-list li{display:inline-block;margin:.5em}.inline-list dt:before{content:\\\"\\\";display:block}.inline-list dt,.inline-list dd{display:inline}.inline-list dt:after{content:\\\":\\\"}.inline-list dd{margin-left:.75em}video{padding:.2em;min-width:500px;min-height:260px;max-width:85vh;max-height:70vh;position:relative;background:linear-gradient(to top, #767676, #2b2b2b);padding:3px}#main{display:flex;align-items:center;justify-content:center}#tuckie-boy{cursor:grab;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}header,footer{text-align:center}header{font-family:\\\"Courier New\\\";letter-spacing:.2ch;text-transform:uppercase}footer{margin:1em;font-size:.8em}.content{text-align:center}video:focus{outline:none}.dot-tv{font-size:.6em;font-weight:normal;letter-spacing:normal;color:#767676}.loader{border:.5em solid #f3f3f3;border-top:.5em solid #afb0b2;border-right:.5em solid #d65656;border-bottom:.5em solid #3d70ab;border-left:.5em solid #767676;border-radius:50%;width:2.5em;height:2.5em;animation:spin 2s linear infinite;margin:1em auto}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\", \"\"]);\n","import * as React from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nconst Main: React.FunctionComponent = () => (\r\n  <Router>\r\n    <Routes />\r\n  </Router>\r\n);\r\n\r\nexport default Main;\r\n","import * as React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport ContactPage from \"./pages/ContactPage\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport TuckerPage from \"./pages/TuckerPage\";\r\nimport WatchPage from \"./pages/WatchPage/WatchPage\";\r\nimport WatchRandomPage from \"./pages/WatchRandomPage\";\r\nimport WatchVideoPage from \"./pages/WatchVideoPage\";\r\n\r\nconst Routes: React.FunctionComponent = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={HomePage} />\r\n\r\n    <Route path=\"/contact\" exact component={ContactPage} />\r\n    <Route path=\"/tucker\" exact component={TuckerPage} />\r\n\r\n    <Route path=\"/watch\" exact component={WatchPage} />\r\n    <Route path=\"/watch/random\" exact component={WatchRandomPage} />\r\n    <Route path=\"/watch/:redditPostId\" exact component={WatchVideoPage} />\r\n\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n);\r\nexport default Routes;\r\n","import ContactPage from \"./ContactPage\";\r\nexport default ContactPage;\r\n","import * as React from \"react\";\r\nimport PageContainer from \"../../components/PageContainer\";\r\n\r\nconst ContactPage: React.FunctionComponent = () => (\r\n  <PageContainer>\r\n    <div>\r\n      <dl className=\"inline-list\">\r\n        <dt>General Inquiries</dt>\r\n        <dd>\r\n          <a href=\"mailto:inquire@tuckbot.tv\">inquire@tuckbot.tv</a>\r\n        </dd>\r\n        <dt>Takedown Requests</dt>\r\n        <dd>\r\n          <a href=\"mailto:takedown@tuckbot.tv\">takedown@tuckbot.tv</a>\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n  </PageContainer>\r\n);\r\nexport default ContactPage;\r\n","import * as React from \"react\";\r\nimport ContactLink from \"./Links/ContactLink\";\r\nimport RandomVideoLink from \"./Links/RandomVideoLink\";\r\n\r\nconst Footing: React.FunctionComponent = () => (\r\n  <footer>\r\n    <ul className=\"inline-list\">\r\n      <li>\r\n        <ContactLink />\r\n      </li>\r\n      <li>\r\n        <RandomVideoLink />\r\n      </li>\r\n    </ul>\r\n  </footer>\r\n);\r\n\r\nexport default Footing;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ContactLink: React.FunctionComponent = () => (\r\n  <Link to=\"/contact\">contact</Link>\r\n);\r\n\r\nexport default ContactLink;\r\n","import * as React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst TUCKER_PETS = 3;\r\n\r\nclass Heading extends React.Component {\r\n  state = {\r\n    numClicks: 0\r\n  };\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = { numClicks: 0 };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      numClicks: this.state.numClicks + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let redirect: React.ReactNode = null;\r\n    if (this.state.numClicks > TUCKER_PETS) {\r\n      redirect = <Redirect push to=\"/tucker\" />;\r\n    }\r\n\r\n    return (\r\n      <header>\r\n        {redirect}\r\n        <h1>\r\n          <span id=\"tuckie-boy\" onClick={this.handleClick}>\r\n            🐶\r\n          </span>\r\n          Tuckbot<span className=\"dot-tv\">.tv</span>\r\n        </h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Heading;\r\n","import HomePage from \"./HomePage\";\r\nexport default HomePage;\r\n","import * as React from \"react\";\r\nimport PageContainer from \"../../components/PageContainer\";\r\nimport RandomVideoLink from \"../../components/Links/RandomVideoLink\";\r\n\r\nconst HomePage: React.FC = () => (\r\n  <PageContainer>\r\n    <p>\r\n      Welcome to Tuckbot. If you're on this page, you've either found it by\r\n      accident or have a curious mind.\r\n    </p>\r\n\r\n    <RandomVideoLink />\r\n  </PageContainer>\r\n);\r\nexport default HomePage;\r\n","import TuckerPage from \"./TuckerPage\";\r\nexport default TuckerPage;\r\n","import * as React from \"react\";\r\nimport PageContainer from \"../../components/PageContainer\";\r\nimport TuckerGallery from \"./components/TuckerGallery\";\r\n\r\nconst TUCKER_BIRTHDAY = 1456790400;\r\nconst TUCKER_BIRTHDAY_DIFF = Math.floor(Date.now() / 1000) - TUCKER_BIRTHDAY;\r\nconst TUCKER_AGE = Math.floor(TUCKER_BIRTHDAY_DIFF / (60 * 60 * 24 * 365));\r\n\r\nclass TuckerPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <PageContainer>\r\n        <h1>Hi there, I'm Tucker!</h1>\r\n\r\n        <p>\r\n          Hi! I'm Tucker. Thanks for the pets! I am {TUCKER_AGE} years old. My\r\n          favorite thing to do is to suck on my toy ducks. I have a few ducks:\r\n          medium ducks, small ducks, huge ducks, tiny ducks, yellow ducks, green\r\n          ducks, purple ducks, orange ducks, slightly more yellow\r\n          ducks...basically every kind of duck. And a few more.\r\n        </p>\r\n\r\n        <p>Here's a few pictures of me.</p>\r\n\r\n        <TuckerGallery />\r\n      </PageContainer>\r\n    );\r\n  }\r\n}\r\nexport default TuckerPage;\r\n","import * as React from \"react\";\r\n\r\nconst TuckerGallery: React.FunctionComponent = () => (\r\n  <div>\r\n    <b>TODO: there will be a photo gallery here, one day</b>\r\n  </div>\r\n);\r\nexport default TuckerGallery;\r\n","import * as React from \"react\";\r\n\r\nconst WatchPage: React.FC = () => (\r\n  <div>You tried to watch with no redditPostId. Good job.</div>\r\n);\r\nexport default WatchPage;\r\n","import WatchRandomPage from \"./WatchRandomPage\";\r\nexport default WatchRandomPage;\r\n","import * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport PageContainer from \"../../components/PageContainer\";\r\nimport { useRedditVideo } from \"../../services/video/hooks\";\r\n\r\nconst WatchRandomPage: React.FunctionComponent = () => {\r\n  const { videoResponse, errorMessage } = useRedditVideo(\"random\");\r\n  const history = useHistory();\r\n\r\n  if (errorMessage) {\r\n    return <PageContainer>Error: {errorMessage}</PageContainer>;\r\n  } else if (!videoResponse) {\r\n    return (\r\n      <PageContainer>\r\n        <Loading>Loading random video, please wait...</Loading>\r\n      </PageContainer>\r\n    );\r\n  } else {\r\n    setTimeout(() => {\r\n      history.replace(`/watch/${videoResponse.redditPostId}`);\r\n    }, 0);\r\n\r\n    return <div>Redirecting</div>;\r\n  }\r\n};\r\n\r\nexport default WatchRandomPage;\r\n","const API_ROOT = `${API_SERVER_ROOT}/public/video`;\r\n\r\nexport interface VideoResponse {\r\n  redditPostId: string;\r\n  redditPostTitle: string;\r\n  mirrorUrl: string;\r\n}\r\n\r\nexport async function fetchVideo(redditPostId: string): Promise<VideoResponse> {\r\n  const res = await fetch(`${API_ROOT}/${redditPostId}`, {\r\n    method: \"GET\"\r\n  });\r\n\r\n  if (res.status !== 200) {\r\n    let errorMessage: string;\r\n    try {\r\n      const errorBody = await res.json();\r\n      errorMessage = errorBody.status.message;\r\n    } catch (e) {\r\n      errorMessage = res.statusText;\r\n    }\r\n\r\n    throw new Error(`${res.status}: ${errorMessage}`);\r\n  }\r\n\r\n  try {\r\n    const result = await res.json();\r\n\r\n    return {\r\n      redditPostId: result.data.redditPostId,\r\n      redditPostTitle: result.data.redditPostTitle,\r\n      mirrorUrl: result.data.mirrorUrl\r\n    };\r\n  } catch (e) {\r\n    throw new Error(\"Server returned an invalid result.\");\r\n  }\r\n}\r\n\r\nexport async function fetchRandom(): Promise<VideoResponse> {\r\n  return fetchVideo(\"random\");\r\n}\r\n","import WatchVideoPage from \"./WatchVideoPage\";\r\nexport default WatchVideoPage;\r\n","import * as React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport VideoDisplay from \"../../components/VideoDisplay\";\r\nimport RedirectIfNotFound from \"../../components/RedirectIfNotFound\";\r\nimport PageContainer from \"../../components/PageContainer\";\r\n\r\nexport interface WatchVideoRouteParams {\r\n  redditPostId: string;\r\n}\r\n\r\nexport interface WatchVideoProps\r\n  extends RouteComponentProps<WatchVideoRouteParams> {}\r\n\r\ntype Props = WatchVideoProps;\r\nconst WatchVideoPage: React.FunctionComponent<Props & RouteComponentProps> = ({\r\n  match: {\r\n    params: { redditPostId: redditPostId }\r\n  }\r\n}) => (\r\n  <PageContainer>\r\n    <React.Fragment>\r\n      <VideoDisplay redditPostId={redditPostId} />\r\n    </React.Fragment>\r\n  </PageContainer>\r\n  // <AbstractGameObject gameObjectId={Number(redditPostId)}>\r\n  //   {({ redditPostId }) => (\r\n  //     <React.Fragment>\r\n  //       <RedirectIfNoSave />\r\n\r\n  //       {redditPostId === \"Minion\" && (\r\n  //         <DuplicantEditor gameObjectId={Number(redditPostId)} />\r\n  //       )}\r\n  //       {redditPostId !== \"Minion\" && <DuplicantNotFound />}\r\n  //     </React.Fragment>\r\n  //   )}\r\n  // </AbstractGameObject>\r\n);\r\nexport default WatchVideoPage;\r\n","import VideoDisplay from \"./VideoDisplay\";\r\n\r\nexport default VideoDisplay;\r\n","import * as React from \"react\";\r\nimport { setTitle } from \"../../services/title/hooks\";\r\nimport { useRedditVideo } from \"../../services/video/hooks\";\r\nimport Loading from \"../Loading\";\r\nimport VideoDetails from \"./components/VideoDetails\";\r\nimport VideoPlayer from \"./components/VideoPlayer\";\r\nimport VideoTitle from \"./components/VideoTitle\";\r\n\r\nexport interface VideoDetailsProps {\r\n  redditPostId: string;\r\n}\r\n\r\ntype Props = VideoDetailsProps;\r\n\r\nconst VideoDisplay: React.FunctionComponent<Props> = ({ redditPostId }) => {\r\n  const { isLoading, errorMessage, videoResponse } = useRedditVideo(\r\n    redditPostId\r\n  );\r\n\r\n  let title = videoResponse ? videoResponse.redditPostTitle : \"Watch\";\r\n\r\n  setTitle(title);\r\n\r\n  if (errorMessage) {\r\n    return <div>Error loading: {errorMessage}</div>; // TODO: convert to component\r\n  } else if (isLoading) {\r\n    return <Loading>Loading...</Loading>; // TODO: convert to component\r\n  } else if (videoResponse) {\r\n    const { redditPostTitle, mirrorUrl, redditPostId } = videoResponse;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <VideoTitle title={redditPostTitle} />\r\n        <VideoPlayer mirrorUrl={mirrorUrl} />\r\n        <VideoDetails redditPostId={redditPostId} />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <div>Not loading</div>;\r\n  }\r\n};\r\n\r\nexport default VideoDisplay;\r\n","import * as React from \"react\";\r\n\r\nexport function setTitle(title: string) {\r\n  React.useEffect(() => {\r\n    document.title = `${title} 🐶 Tuckbot`;\r\n  }, [title]);\r\n}\r\n","import * as React from \"react\";\r\nimport RandomVideoLink from \"../../Links/RandomVideoLink\";\r\nimport RedditPostLink from \"../../Links/RedditPostLink\";\r\n\r\nexport interface VideoDetailsProps {\r\n  redditPostId: string;\r\n}\r\n\r\ntype Props = VideoDetailsProps;\r\nconst VideoDetails: React.FC<Props> = ({ redditPostId }) => (\r\n  <div className=\"videoDetails\">\r\n    <ul className=\"inline-list\">\r\n      <li>\r\n        <RedditPostLink redditPostId={redditPostId} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default VideoDetails;\r\n","import * as React from \"react\";\r\n\r\nexport interface RedditPostLinkProps {\r\n  redditPostId: string;\r\n}\r\n\r\nconst RedditPostLink: React.FunctionComponent<RedditPostLinkProps> = ({\r\n  redditPostId\r\n}) => <a href={\"https://reddit.com/\" + redditPostId}>see on reddit</a>;\r\n\r\nexport default RedditPostLink;\r\n","import * as React from \"react\";\r\nconst poster = require(\"@/img/poster.png\");\r\n\r\nexport interface VideoPlayerProps {\r\n  mirrorUrl: string;\r\n}\r\n\r\ntype Props = VideoPlayerProps;\r\nconst VideoPlayer: React.FC<Props> = ({ mirrorUrl }) => (\r\n  <div className=\"videoPlayer\">\r\n    <video\r\n      controls\r\n      poster={poster}\r\n      src={mirrorUrl}\r\n      controlsList=\"nodownload\"\r\n    ></video>\r\n  </div>\r\n);\r\n\r\nexport default VideoPlayer;\r\n","module.exports = __webpack_public_path__ + \"assets/img/poster_5165009702bcea916f486ffa60701b9f.png\";","import * as React from \"react\";\r\n\r\nexport interface VideoTitleProps {\r\n  title: string;\r\n}\r\n\r\ntype Props = VideoTitleProps;\r\nconst VideoTitle: React.FC<Props> = ({ title }) => (\r\n  <div className=\"videoTitle\">\r\n    <h2>{title}</h2>\r\n  </div>\r\n);\r\n\r\nexport default VideoTitle;\r\n"],"sourceRoot":""}